"use strict";

js2_1();

//////////////////////////////////////////////////////////////////////////////////////
// 2.1 JavaScriptプログラムのテキスト
//////////////////////////////////////////////////////////////////////////////////////

// JavaScriptは大文字小文字を区別する
// キーワード、変数、関数名、識別子で大文字と小文字は厳密に区別される
// whileキーワード WhileやWHILEは無効
// online Online OnLine ONLINE はそれぞれ異なる変数となる
//
// JavaScriptはプログラム内のトークンを区切る空白を無視する
// 一般的に開業も無視される
// 例外でプログラム内に空白や改行を自由に挿入できる
// インデントを使用してコードを読みやすくすることも出来る
//
// 通常のスペース文字(\u0020)、タブ(\u0009)やASCII制御文字、Unicodeのさまざまな空白文字はJavaScriptでは空白として扱われる
// 改行文字、復帰文字、復帰文字と改行文字が連続する場合もすべて行末記号として扱われる

//////////////////////////////////////////////////////////////////////////////////////
// 2.2 コメント
//////////////////////////////////////////////////////////////////////////////////////

// 単一行コメント
/* 単一行コメント */

/*
 * 複数行コメント
 */

//////////////////////////////////////////////////////////////////////////////////////
// 2.3 リテラル
//////////////////////////////////////////////////////////////////////////////////////

// リテラル 直接記述するデータ値のこと
12             // 数値12
1.2            // 数値1.2
"hello world"  // テキスト文字列
'Hi'           // これも文字列
true           // 論理値
false          // もう1つの論理値
null           // オブジェクトがないことを表す

//////////////////////////////////////////////////////////////////////////////////////
// 2.4 識別子と予約語
//////////////////////////////////////////////////////////////////////////////////////

// 識別子 名前のこと
// JavaScriptでは識別子を使って定数や変数、プロパティ、関数、クラスを指定する
// 特定のループのラベルとして使うこともある
// 識別子の戦闘の文字はUnicode文字、アンダースコア(_)、ドル記号($)のいずれかである必要がある
// 識別子の先頭に数字は使えない
// 予約後は識別子として使えない

my_variable_name
v13
_dummy
$str

// 予約語
// from、set、targetは識別子として使用可能
// as const export get null target void
// async continue extends if of this while
// await debugger false import return throw with
// break default finally in set true yield
// case delete for instanceof static try
// catch do from let super typeof
// class else function new switch var

// 将来的な予約語
// 歴史的な理由でargumentsとevalは識別子として使えない
// enum implements interface package private protected public


//////////////////////////////////////////////////////////////////////////////////////
// 2.5 Unicode
//////////////////////////////////////////////////////////////////////////////////////

// 文字列やコメントにUnicode文字コードを使用可能
// 識別子には一般的にASCII文字と数字を使うのが一般的だが
// JavaScriptにはUnicode文字集合の文字や数字、表意文字を識別子に設定可能（絵文字は使用不可）
// 定数や変数に数学記号や英語以外の言語の名前も使用できる

const π = 3.14;
const sí = true;


function js2_1() {

}